
use('test');
db.createCollection("sucursal_automovil", {
    validator: {
      $jsonSchema: {
        bsonType: "object",
        required: ["ID_sucursal", "ID_automovil", "Cantidad_disponible"],
        properties: {
          ID_sucursal: {
            bsonType: "int",
            description: "Debe ser una cadena de texto"
          },
          ID_automovil: {
            bsonType: "int",
            description: "Debe ser una cadena de texto"
          },
          Cantidad_disponible: {
            bsonType: "int",
            minimum: 1,
            description: "Debe ser un número entero mayor que cero"
          }
        }
      }
    }
  });

  
use("testx");  
db.sucursal_automovil.insertMany([
    {
        _id: 1,
        ID_sucursal: 1,
        ID_automovil: 1,
        Cantidad_disponible: 1
    },
    {
        _id: 2,
        ID_sucursal: 2,
        ID_automovil: 2,
        Cantidad_disponible: 2
    },
    {
        _id: 3,
        ID_sucursal: 3,
        ID_automovil: 3,
        Cantidad_disponible: 2
    },
    {
        _id: 4,
        ID_sucursal: 4,
        ID_automovil: 4,
        Cantidad_disponible: 4
    },
    {
        _id: 5,
        ID_sucursal: 5,
        ID_automovil: 5,
        Cantidad_disponible: 2
    }
]);

/* db.createCollection("sucursal_automovil", {
    validator: {
      $jsonSchema: {
        bsonType: "object",
        required: ["ID_sucursal", "ID_automovil", "Cantidad_disponible"],
        properties: {
          ID_sucursal: {
            bsonType: "int",
            description: "Debe ser una cadena de texto"
          },
          ID_automovil: {
            bsonType: "int",
            description: "Debe ser una cadena de texto"
          },
          Cantidad_disponible: {
            bsonType: "int",
            minimum: 1,
            description: "Debe ser un número entero mayor que cero"
          }
        }
      }
    }
  }); */
use('test');
db.createCollection("sucursal", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["ID_sucursal", "Nombre", "Direccion","Telefono"],
            properties: {
            ID_sucursal: {
            bsonType: "int",
                description: "Debe ser numero"
            },
            Nombre: {
                bsonType: "string",
                description: "Debe ser una cadena de texto"
            },
            Direccion: {
                bsonType: "string",
                description: "Debe ser una cadena de texto"
            },
            Telefono: {
                bsonType: "string",
                description: "Debe ser una  cadena de texto"
            }
        }
    }
    }
});

use('testx');
db.sucursal.insertOne({
    _id: 7,
        ID_sucursal: 6,
        Nombre: "a65",
        Direccion: "dire#12-1",
        Telefono: 3211212212
})
db.sucursal.insertMany([
    {
        _id: 1,
        ID_sucursal: 1,
        Nombre: "a1",
        Direccion: "dire#12-1",
        Telefono: "3211212212"

    },
    {
        _id: 2,
        ID_sucursal: 2,
        Nombre: "a2",
        Direccion: "dire#12-1",
        Telefono: "3211212212"

    },
    {
        _id: 3,
        ID_sucursal: 3,
        Nombre: "a3",
        Direccion: "dire#12-1",
        Telefono: "3211212212"

    },
    {
        _id: 4,
        ID_sucursal: 4,
        Nombre: "a4",
        Direccion: "dire#12-1",
        Telefono: "3211212212"

    },
    {
        _id: 5,
        ID_SUCURSAL: 5,
        Nombre: "a5",
        Direccion: "dire#12-1",
        Telefono: "3211212212"

    }
]);

use('test');
db.createCollection("automovil", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["ID_automovil", "Marca", "Modelo","Capacidad","Precio_diario"],
            properties: {
            ID_automovil: {
            bsonType: "int",
                description: "Debe ser numero"
            },
            Marca: {
                bsonType: "string",
                description: "Debe ser una cadena de texto"
            },
            Modelo: {
                bsonType: "string",
                description: "Debe ser una cadena de texto"
            },
            Anio: {
                bsonType: "int",
                description: "Debe ser un numero"
            },
            Capacidad: {
                bsonType: "int",
                description: "Debe ser numero"
            },
            Precio_diario: {
                bsonType: "int",
                description: "Debe ser un valor decimal"
            }
            
        }
    }
    }
});



use('test');
db.createCollection("reserva", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["ID_reserva", "ID_cliente", "ID_automovil","Fecha_reserva","Fecha_inicio","Fecha_fin","Estado"],
            properties: {
                ID_reserva: {
                    bsonType: "int",
                    description: "Debe ser numero"
                },
                ID_cliente: {
                    bsonType: "int",
                    description: "Debe ser numero"
                },
                ID_automovil: {
                    bsonType: "int",
                    description: "Debe ser numero"
                },
                Fecha_reserva: {
                    bsonType: "date",
                    description: "Debe ser una fecha válida"
                },
                Fecha_inicio: {
                    bsonType: "date",
                    description: "Debe ser una fecha válida"
                },
                Fecha_fin: {
                    bsonType: "date",
                    description: "Debe ser una fecha válida"
                },
                Estado: {
                    bsonType: "string",
                    description: "Debe ser una cadena de texto"
                }
            }
        }
    }
});

db.reserva.insertMany([
    {
        _id: 1,
        ID_reserva: 1,
        ID_automovil: 1,
        fecha_reserva: "",
        fecha_inicio: "",
        fecha_fin: "",
        estado: "qwerty"
    },
    {
        _id: 2,
        ID_reserva: 2,
        ID_automovil: 2,
        fecha_reserva: "2022-02-01",
        fecha_inicio: "2022-02-02",
        fecha_fin: "2022-02-03",
        estado: "qwerty2"
    },
    {
        _id: 3,
        ID_reserva: 3,
        ID_automovil: 3,
        fecha_reserva: "2022-03-01",
        fecha_inicio: "2022-03-02",
        fecha_fin: "2022-03-03",
        estado: "qwerty3"
    },
    {
        _id: 4,
        ID_reserva: 4,
        ID_automovil: 4,
        fecha_reserva: "2022-04-01",
        fecha_inicio: "2022-04-02",
        fecha_fin: "2022-04-03",
        estado: "qwerty4"
    },
    {
        _id: 5,
        ID_reserva: 5,
        ID_automovil: 5,
        fecha_reserva: "2022-05-01",
        fecha_inicio: "2022-05-02",
        fecha_fin: "2022-05-03",
        estado: "qwerty5"
    }
]);

db.automovil.insertMany([
    {
        _id: 1,
        ID_automovil: 1,
        marca: "m1",
        modelo: "mx123",
        anio: 2019,
        tipo: "asdfg",
        capacidad: 4,
        precio_diario: 30000

    },

    {
        _id: 2,
        ID_automovil: 2,
        marca: "m2",
        modelo: "mx124",
        anio: 2020,
        tipo: "asdfg",
        capacidad: 4,
        precio_diario: 31000
    },
    {
        _id: 3,
        ID_automovil: 3,
        marca: "m3",
        modelo: "mx125",
        anio: 2021,
        tipo: "asdfg",
        capacidad: 4,
        precio_diario: 32000
    },
    {
        _id: 4,
        ID_automovil: 4,
        marca: "m4",
        modelo: "mx126",
        anio: 2022,
        tipo: "asdfg",
        capacidad: 4,
        precio_diario: 33000
    },
    {
        _id: 5,
        ID_automovil: 5,
        marca: "m5",
        modelo: "mx127",
        anio: 2023,
        tipo: "asdfg",
        capacidad: 4,
        precio_diario: 34000
    }
]);


use('test');
db.createCollection("cliente", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["ID_cliente", "Nombre", "Apellido","DNI","Direccion","telefono","Email"],
            properties: {
                ID_cliente: {
                    bsonType: "int",
                    description: "Debe ser numero",
                    maxLength: 10
                },
                Nombre: {
                    bsonType: "string",
                    description: "Debe ser una cadena de texto",
                    maxLength: 20 
                },
                Apellido: {
                    bsonType: "string",
                    description: "Debe ser numero",
                    maxLength: 20
                },
                DNI: {
                    bsonType: "int",
                    description: "Debe ser numero",
                    maxLength: 11
                },
                Direccion: {
                    bsonType: "string",
                    description: "Debe ser una cadena de texto",
                    maxLength: 10
                },
                Telefono: {
                    bsonType: "string",
                    description: "Debe ser una cadena de texto",
                    maxLength: 10
                },
                Estado: {
                    bsonType: "string",
                    description: "Debe ser una cadena de texto",
                    maxLength: 15
                }
            }
        }
    }
});


db.cliente.insertMany([
    {
        _id: 1,
        ID_cliente: 123,
        nombre: "n1",
        apellido: "ap1",
        dni: "",
        direccion: "",
        telefono: 3121212,
        email: "awdsas@"
    },
    {
        _id: 2,
        ID_cliente: 124,
        nombre: "n2",
        apellido: "ap2",
        dni: "dni2",
        direccion: "dir2",
        telefono: 3121213,
        email: "email2@domain.com"
    },
    {
        _id: 3,
        ID_cliente: 125,
        nombre: "n3",
        apellido: "ap3",
        dni: "dni3",
        direccion: "dir3",
        telefono: 3121214,
        email: "email3@domain.com"
    },
    {
        _id: 4,
        ID_cliente: 126,
        nombre: "n4",
        apellido: "ap4",
        dni: "dni4",
        direccion: "dir4",
        telefono: 3121215,
        email: "email4@domain.com"
    },
    {
        _id: 5,
        ID_cliente: 127,
        nombre: "n5",
        apellido: "ap5",
        dni: "dni5",
        direccion: "dir5",
        telefono: 3121216,
        email: "email5@domain.com"
    }
]);


use('db_campus_2023');
db.alquiler.insertMany([
    {
        _id: 1,
        ID_alquiler: 123213,
        ID_cliente: 22111,
        ID_automovil: 1,
        fecha_inicio: "",
        fecha_fin: "",
        costo_total: 30.000,
        estado: "qqq"
    },
    {
        _id: 2,
        ID_alquiler: 123214,
        ID_cliente: 22112,
        ID_automovil: 2,
        fecha_inicio: "2022-02-01",
        fecha_fin: "2022-02-02",
        costo_total: 31000,
        estado: "qqq2"
    },
    {
        _id: 3,
        ID_alquiler: 123215,
        ID_cliente: 22113,
        ID_automovil: 3,
        fecha_inicio: "2022-03-01",
        fecha_fin: "2022-03-02",
        costo_total: 32000,
        estado: "qqq3"
    },
    {
        _id: 4,
        ID_alquiler: 123216,
        ID_cliente: 22114,
        ID_automovil: 4,
        fecha_inicio: "2022-04-01",
        fecha_fin: "2022-04-02",
        costo_total: 33000,
        estado: "qqq4"
    },
    {
        _id: 5,
        ID_alquiler: 123217,
        ID_cliente: 22115,
        ID_automovil: 5,
        fecha_inicio: "2022-05-01",
        fecha_fin: "2022-05-02",
        costo_total: 34000,
        estado: "qqq5"
    }
]);

db.registro_devolcion.insertMany([
    {
        _id: 1,
        ID_registro: 1232144,
        ID_alquiler: 123213,
        ID_empleado: 322323,
        fecha_devolucion: "",
        combustible_devuelto: "1.2",
        kilometraje_devuelto: 234,
        monto_adicional: 1.20020,
    },
    {
        _id: 2,
        ID_registro: 1232145,
        ID_alquiler: 123214,
        ID_empleado: 322324,
        fecha_devolucion: "2022-02-01",
        combustible_devuelto: "1.3",
        kilometraje_devuelto: 235,
        monto_adicional: 1300.20
    },
    {
        _id: 3,
        ID_registro: 1232146,
        ID_alquiler: 123215,
        ID_empleado: 322325,
        fecha_devolucion: "2022-03-01",
        combustible_devuelto: "1.4",
        kilometraje_devuelto: 236,
        monto_adicional: 1400.20
    },
    {
        _id: 4,
        ID_registro: 1232147,
        ID_alquiler: 123216,
        ID_empleado: 322326,
        fecha_devolucion: "2022-04-01",
        combustible_devuelto: "1.5",
        kilometraje_devuelto: 237,
        monto_adicional: 1500.20
    },
    {
        _id: 5,
        ID_registro: 1232148,
        ID_alquiler: 123217,
        ID_empleado: 322327,
        fecha_devolucion: "2022-05-01",
        combustible_devuelto: "1.6",
        kilometraje_devuelto: 238,
        monto_adicional: 1600.20
    }
]);

db.registro_entrega.insertMany([
    {
        _id: 1,
        ID_registro: 1232144,
        ID_alquiler: 123213,
        ID_empleado: 322323,
        fecha_entrega: "",
        combustible_entregado: "23.3",
        kilometraje_entregado: 212,

    },
    {
        _id: 2,
        ID_registro: 1232145,
        ID_alquiler: 123214,
        ID_empleado: 322324,
        fecha_entrega: "2022-02-01",
        combustible_entregado: "24.3",
        kilometraje_entregado: 213
    },
    {
        _id: 3,
        ID_registro: 1232146,
        ID_alquiler: 123215,
        ID_empleado: 322325,
        fecha_entrega: "2022-03-01",
        combustible_entregado: "25.3",
        kilometraje_entregado: 214
    },
    {
        _id: 4,
        ID_registro: 1232147,
        ID_alquiler: 123216,
        ID_empleado: 322326,
        fecha_entrega: "2022-04-01",
        combustible_entregado: "26.3",
        kilometraje_entregado: 215
    },
    {
        _id: 5,
        ID_registro: 1232148,
        ID_alquiler: 123217,
        ID_empleado: 322327,
        fecha_entrega: "2022-05-01",
        combustible_entregado: "27.3",
        kilometraje_entregado: 216
    }
]);

db.empleado.insertMany([
    {
        _id: 1,
        nombre: "qawewq",
        apellido: "aww",
        dni: "dn1",
        direccion: "d1",
        telefono: 312312,
        cargo: ""

    },
    {
        _id: 2,
        nombre: "qawewq2",
        apellido: "aww2",
        dni: "dn2",
        direccion: "d2",
        telefono: 312313,
        cargo: "cargo2"
    },
    {
        _id: 3,
        nombre: "qawewq3",
        apellido: "aww3",
        dni: "dn3",
        direccion: "d3",
        telefono: 312314,
        cargo: "cargo3"
    },
    {
        _id: 4,
        nombre: "qawewq4",
        apellido: "aww4",
        dni: "dn4",
        direccion: "d4",
        telefono: 312315,
        cargo: "cargo4"
    },
    {
        _id: 5,
        nombre: "qawewq5",
        apellido: "aww5",
        dni: "dn5",
        direccion: "d5",
        telefono: 312316,
        cargo: "cargo5"
    }
]);

use('db_campus_2023');
db.cliente.find();

use('db_campus_2023');
db.getCollection("cliente").aggregate([
    {
        $lookup: {
            from: "alquiler",
            localField: "_id",
            foreignField: "ID_cliente",
            as: "alquiler_fk"
        }
    },
    {
        $project: {
            "alquiler_fk._id": 0,
            "alquiler_fk.ID_cliente_id": 0,
            "alquiler_fk.ID_automovil_id": 0,
            "alquiler_fk.costo_total": 0,
        }
    },
    {
        $unwind: "$alquiler_fk"
    },
    {
        $match: {
            "alquiler_fk.estado": { $eq: "disponible" }
        }
    },
    {
        $group: {
            _id: "$_id",
            ID_cliente: { $first: "$ID_cliente" },
            nombre: { $first: "$nombre" },
            apellido: { $first: "$apellido" },
            dni: { $first: "$dni" },
            telefono: { $first: "$telefono" },
            alquiler_fk: { $push: "$alquiler_fk" }
        }
    }
]);


/* 6 */
use('db_campus_2023');
db.alquiler.find({ ID_alquiler: { $eq: 123213 } })

/* 7 */
use('db_campus_2023');
db.empleado.find({ cargo: { $eq: "vendedor" } });

/* 8 */
use('db_campus_2023');
db.sucursal_automovil.find();

/* 9 */
use('db_campus_2023');
db.alquiler.find({ ID_alquiler: { $eq: 123214 } });

/* 10 */
use('db_campus_2023');
db.cliente.find({ dni: { $eq: 'dni2' } });

/* 11 */
use('db_campus_2023');
db.getCollection('automovil').find({
    capacidad: { $gt: 5 }
});

/* 12 */
use('db_campus_2023');
db.getCollection('alquiler').find({
    fecha_inicio: { $gt: "2022-04-01 " }
});

/* 13 */
use('db_campus_2023');
db.getCollection('reserva').find({
    ID_cliente: { $eq: 125 }
});

/* 14 */
use('db_campus_2023');
db.getCollection('empleado').find({ $or: [{ cargo:"asistente"}, { cargo:"gerente"} ]});

/* 15 */
db.alquiler.aggregate([
    {
      $lookup: {
        from: "cliente",
        localField: "ID_cliente",
        foreignField: "_id",
        as: "alquiler",
      },
    },
    {
      $unwind: "$alquiler"
    },
    {
      $group: {
          _id: "$alquiler.nombre",
          cantidad_alquiler: {$sum: 1}
      }
    },
    {
      $match: {
          cantidad_alquiler: {$exists: true, $not: {$size: 0}}      
      }
    },
  ]);


  /* 16 */
  use('db_campus_2023');
db.automovil.find(
  {
    marca:"m1",
  },
  {
    modelo:"mx123",
  }
);

/* 17 */
use('db_campus_2023');
db.sucursal.find([
    {
        $lookup: {
            from: "sucursal_automovil",
            localField: "_id",
            foreignField: "sucursal_id",
            as: "sucursales"
        }
    },
    {
        $unwind: "$sucursales"
    },
    {
        $group: {
          _id: {
            sucursal_id: "$_id",
            nombre: "$nombre",
            direccion: "$direccion"
          },
          cantidad_automoviles: { $sum: "$sucursales.cantidad_disponible"}
        }
    },
    {
        $project: {
            cantidad_automoviles: 1,
        }
    }
])
